generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// =======================
// üö© ENUMS
// =======================

enum Status {
  ATIVO
  INATIVO
}

enum TipoUsuario {
  PESSOA_FISICA    
  PESSOA_JURIDICA  
}

enum Role {
  ADMIN
  ADMINISTRATOR
  FINANCIAL
  PROFESSOR
  STUDENT
  COMPANY
  PEDAGOGICAL
  RECRUITER
  HR
}

enum TipoAcao {
  LOGIN
  LOGOUT
  CRIACAO
  ATUALIZACAO
  EXCLUSAO
  ACESSO_NEGADO
  TENTATIVA_SUSPICAO
}

enum TipoServico {
  CONSULTORIA
  RECRUTAMENTO
}

// =======================
// üë• MODELOS DE USU√ÅRIO
// =======================

model Usuario {
  id           String     @id @default(uuid())
  nomeCompleto String     @db.VarChar(255)
  cpf          String?    @unique @db.Char(11) // Obrigat√≥rio se for pessoa f√≠sica
  cnpj         String?    @unique @db.Char(14) // Obrigat√≥rio se for pessoa jur√≠dica
  dataNasc     DateTime?
  telefone     String?    @db.VarChar(20)
  genero       String?    @db.VarChar(20)

  email        String     @unique @db.VarChar(255)
  senha        String     @db.VarChar(255)
  aceitarTermos Boolean

  tipoUsuario  TipoUsuario
  role         Role        @default(STUDENT)
  status       Status      @default(ATIVO)

  refreshToken String?     @db.Text

  criadoEm     DateTime    @default(now())
  atualizadoEm DateTime    @updatedAt
  ultimoLogin  DateTime?

  perfil       PerfilUsuario?
  logs         LogAuditoria[]

  @@map("usuarios")
  @@index([email, status])
  @@index([cpf])
  @@index([cnpj])
}

// üî• Perfil complementa dados espec√≠ficos
model PerfilUsuario {
  id           String   @id @default(uuid())
  usuarioId    String   @unique

  usuario      Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  // Dados empresariais (opcional para pessoa jur√≠dica)
  razaoSocial  String?  @db.VarChar(255)
  nomeFantasia String?  @db.VarChar(255)

  endereco     String?  @db.VarChar(500)
  cidade       String?  @db.VarChar(100)
  estado       String?  @db.VarChar(2)
  cep          String?  @db.VarChar(8)

  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("perfis_usuarios")
}

// üìú Logs de Auditoria
model LogAuditoria {
  id          String     @id @default(uuid())
  usuarioId   String?

  usuario     Usuario?   @relation(fields: [usuarioId], references: [id])

  acao        TipoAcao
  descricao   String     @db.Text
  ipAddress   String?    @db.VarChar(45)
  userAgent   String?    @db.Text

  criadoEm    DateTime   @default(now())

  @@map("logs_auditoria")
  @@index([usuarioId, criadoEm])
  @@index([acao, criadoEm])
}

// üîê Controle de Rate Limit
model RateLimit {
  id              String    @id @default(uuid())
  chave           String    @unique @db.VarChar(255)
  tentativas      Int       @default(0)
  ultimaTentativa DateTime  @default(now())
  bloqueadoAte    DateTime?

  @@map("rate_limits")
  @@index([ultimaTentativa])
}

// =======================
// üåê MODELOS DO WEBSITE
// =======================

model Sobre {
  id          Int      @id @default(autoincrement())
  imagemUrl   String   @db.VarChar(500)
  titulo      String   @db.VarChar(255)
  descricao   String   @db.Text
  criadoEm    DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("sobre")
}

model Banner {
  id         Int      @id @default(autoincrement())
  imagemUrl  String   @db.VarChar(500)
  linkUrl    String   @db.VarChar(500)
  position   Int

  criadoEm   DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("banners")
}

model Servico {
  id          Int       @id @default(autoincrement())
  tipo        TipoServico
  imagemUrl   String    @db.VarChar(500)
  titulo      String    @db.VarChar(255)
  descricao   String    @db.Text
  titleButton String    @db.VarChar(100)
  urlButton   String    @db.VarChar(500)

  criadoEm    DateTime  @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("servicos")
}

model TituloPagina {
  id           Int      @id @default(autoincrement())
  titulo       String   @db.VarChar(255)
  subtitulo    String   @db.VarChar(255)
  descricao    String   @db.VarChar(250)
  textoBotao   String   @db.VarChar(100)
  urlBotao     String   @db.VarChar(500)

  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("titulos_pagina")
}

model InformacaoAdvance {
  id        Int      @id @default(autoincrement())
  urlVideo  String   @db.VarChar(500)
  historia  String   @db.VarChar(500)
  missao    String   @db.VarChar(500)
  visao     String   @db.VarChar(500)

  criadoEm  DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("informacoes_advance")
}

model PorqueEscolherAdvance {
  id           Int           @id @default(autoincrement())
  titulo       String        @db.VarChar(255)
  descricao    String        @db.VarChar(250)
  textoBotao   String        @db.VarChar(100)
  urlBotao     String        @db.VarChar(500)

  boxes        BoxDestaque[]

  criadoEm     DateTime      @default(now())
  atualizadoEm DateTime      @updatedAt

  @@map("porque_escolher_advance")
}

model BoxDestaque {
  id                        Int      @id @default(autoincrement())
  icone                     String   @db.VarChar(255)
  titulo                    String   @db.VarChar(255)
  descricao                 String   @db.Text
  porqueEscolherAdvanceId   Int

  porqueEscolherAdvance     PorqueEscolherAdvance @relation(fields: [porqueEscolherAdvanceId], references: [id], onDelete: Cascade)

  @@map("boxes_destaque")
}

model Empresa {
  id              Int      @id @default(autoincrement())
  imagemUrl       String   @db.VarChar(500)
  titulo          String   @db.VarChar(255)
  descricao       String   @db.VarChar(500)
  tituloImagem    String   @db.VarChar(255)
  descricaoImagem String   @db.Text
  textoBotao      String   @db.VarChar(100)
  urlBotao        String   @db.VarChar(500)

  criadoEm        DateTime @default(now())
  atualizadoEm    DateTime @updatedAt

  @@map("empresas")
}

model TituloPaginaCursos {
  id         Int      @id @default(autoincrement())
  titulo     String   @db.VarChar(255)
  subtitulo  String   @db.VarChar(255)
  descricao  String   @db.Text
  textoBotao String   @db.VarChar(100)
  urlBotao   String   @db.VarChar(500)

  criadoEm   DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("titulos_pagina_cursos")
}

model MercadoTrabalho {
  id         Int                @id @default(autoincrement())
  titulo     String             @db.VarChar(255)
  subtitulo  String             @db.VarChar(255)

  destaques  DestaqueMercado[]

  criadoEm   DateTime           @default(now())
  atualizadoEm DateTime         @updatedAt

  @@map("mercados_trabalho")
}

model DestaqueMercado {
  id                Int              @id @default(autoincrement())
  numeroDestaque    String           @db.VarChar(50)
  descricaoDestaque String           @db.Text
  mercadoTrabalhoId Int

  mercadoTrabalho   MercadoTrabalho @relation(fields: [mercadoTrabalhoId], references: [id], onDelete: Cascade)

  @@map("destaques_mercado")
}
