# =============================================
# CONFIGURAÇÕES GERAIS
# =============================================
NODE_ENV=development
PORT=3000
FRONTEND_URL=http://localhost:3000

# =============================================
# BANCO DE DADOS - SUPABASE
# =============================================
# URL para conexões da aplicação (com pooler)
DATABASE_URL="postgresql://postgres.xxx:password@aws-0-sa-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1"

# URL direta para migrações Prisma (sem pooler)
DIRECT_URL="postgresql://postgres.xxx:password@aws-0-sa-east-1.pooler.supabase.com:5432/postgres"

# Configurações adicionais do Supabase
SUPABASE_URL=https://xxx.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# =============================================
# JWT - AUTENTICAÇÃO
# =============================================
JWT_SECRET=sua_chave_jwt_super_secreta_com_pelo_menos_32_caracteres
JWT_REFRESH_SECRET=sua_chave_refresh_jwt_ainda_mais_secreta_com_64_caracteres
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# =============================================
# BREVO - EMAIL E SMS (OBRIGATÓRIO PARA EMAILS)
# =============================================
# API Key do Brevo (obrigatório para envio real de emails)
BREVO_API_KEY=xkeysib-851JKC36h92VRfbk-EXEMPLO-SuaChaveRealAqui

# Configurações de remetente
BREVO_FROM_EMAIL=noreply@advancemais.com
BREVO_FROM_NAME=AdvanceMais

# Configurações de verificação de email
EMAIL_VERIFICATION_REQUIRED=true
EMAIL_VERIFICATION_EXPIRATION_HOURS=24
EMAIL_VERIFICATION_MAX_RESEND=3
EMAIL_VERIFICATION_COOLDOWN_MINUTES=5

# Configurações avançadas (opcionais)
BREVO_MAX_RETRIES=3
BREVO_TIMEOUT=30000
BREVO_DAILY_EMAIL_LIMIT=10000
BREVO_DAILY_SMS_LIMIT=1000

# Configurações SMTP (backup - opcional)
BREVO_SMTP_HOST=smtp-relay.brevo.com
BREVO_SMTP_PORT=587
BREVO_SMTP_USER=seu_email@dominio.com
BREVO_SMTP_PASSWORD=sua_senha_smtp

# =============================================
# MERCADOPAGO - PAGAMENTOS
# =============================================
MERCADOPAGO_ACCESS_TOKEN_SANDBOX=TEST-123456789-sandbox-token-aqui
MERCADOPAGO_ACCESS_TOKEN_PRODUCTION=APP_USR-123456789-production-token-aqui
MERCADOPAGO_ENVIRONMENT=sandbox

# Webhook do MercadoPago
MERCADOPAGO_WEBHOOK_SECRET=sua_chave_secreta_webhook

# =============================================
# SEGURANÇA E CORS
# =============================================
# Em desenvolvimento, pode ser *
# Em produção, especifique seu domínio
CORS_ORIGIN=*

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Configurações de upload
MAX_FILE_SIZE=5242880
ALLOWED_FILE_TYPES=image/jpeg,image/png,application/pdf

# =============================================
# LOGS E MONITORAMENTO
# =============================================
LOG_LEVEL=info
LOG_FILE_ENABLED=true
LOG_DB_QUERIES=false

# =============================================
# CONFIGURAÇÕES ESPECÍFICAS DE VERIFICAÇÃO
# =============================================

# COMO FUNCIONA O SISTEMA DE VERIFICAÇÃO:
# 
# 1. EMAIL_VERIFICATION_REQUIRED=true (padrão)
#    - Usuários precisam verificar email antes de usar a conta
#    - Conta fica com status "PENDENTE_VERIFICACAO" até verificação
#    - Email de verificação é enviado automaticamente no registro
#
# 2. EMAIL_VERIFICATION_REQUIRED=false
#    - Usuários podem usar a conta imediatamente
#    - Email de boas-vindas simples é enviado
#    - Conta fica ativa desde o registro
#
# 3. BREVO_API_KEY não configurado
#    - Emails são simulados (apenas logs)
#    - Funciona normalmente em desenvolvimento
#    - Em produção, deve ser configurado

# =============================================
# EXEMPLOS DE USO EM DIFERENTES AMBIENTES
# =============================================

# DESENVOLVIMENTO LOCAL:
# NODE_ENV=development
# EMAIL_VERIFICATION_REQUIRED=false (para testes rápidos)
# BREVO_API_KEY= (vazio = modo simulado)
# FRONTEND_URL=http://localhost:3000

# STAGING/HOMOLOGAÇÃO:
# NODE_ENV=staging
# EMAIL_VERIFICATION_REQUIRED=true
# BREVO_API_KEY=sua_chave_real_aqui
# FRONTEND_URL=https://staging.advancemais.com

# PRODUÇÃO:
# NODE_ENV=production
# EMAIL_VERIFICATION_REQUIRED=true
# BREVO_API_KEY=sua_chave_real_aqui
# FRONTEND_URL=https://advancemais.com
# CORS_ORIGIN=https://advancemais.com

# =============================================
# URLS IMPORTANTES PARA O FRONTEND
# =============================================

# ENDPOINTS DA API:
# Health Check: GET {API_URL}/health
# Registro: POST {API_URL}/api/v1/usuarios/registrar
# Login: POST {API_URL}/api/v1/usuarios/login
# Verificar Email: GET {API_URL}/verificar-email?token=xxx
# Reenviar Verificação: POST {API_URL}/api/v1/brevo/reenviar-verificacao

# PÁGINAS DO FRONTEND:
# Login: {FRONTEND_URL}/login
# Verificação: {FRONTEND_URL}/verificar-email?token=xxx
# Recuperação: {FRONTEND_URL}/recuperar-senha?token=xxx

# =============================================
# INSTRUÇÕES DE CONFIGURAÇÃO RÁPIDA
# =============================================

# 1. CONFIGURAÇÃO MÍNIMA (desenvolvimento):
#    - Copie este arquivo para .env
#    - Configure DATABASE_URL e DIRECT_URL
#    - Configure JWT_SECRET
#    - Deixe BREVO_API_KEY vazio para modo simulado

# 2. CONFIGURAÇÃO COMPLETA (produção):
#    - Configure todos os campos obrigatórios
#    - Obtenha API Key real do Brevo: https://app.brevo.com/settings/keys/api
#    - Configure domínio real em FRONTEND_URL e CORS_ORIGIN
#    - Configure EMAIL_VERIFICATION_REQUIRED=true

# 3. TESTE DO SISTEMA:
#    - Registre um usuário via POST /api/v1/usuarios/registrar
#    - Verifique logs para ver email simulado/enviado
#    - Use GET /verificar-email?token=xxx para confirmar
#    - Teste reenvio via POST /api/v1/brevo/reenviar-verificacao

# =============================================
# TROUBLESHOOTING
# =============================================

# Emails não são enviados:
# 1. Verifique se BREVO_API_KEY está configurado
# 2. Verifique logs da aplicação para erros
# 3. Teste com POST /api/v1/brevo/test/email (desenvolvimento)
# 4. Verifique status com GET /api/v1/brevo/health

# Usuário não consegue fazer login:
# 1. Verifique se email foi verificado (se obrigatório)
# 2. Verifique status da conta no banco
# 3. Use GET /api/v1/brevo/status-verificacao/:userId

# Problemas de CORS:
# 1. Configure CORS_ORIGIN com seu domínio frontend
# 2. Em desenvolvimento, pode usar CORS_ORIGIN=*

# Rate limiting muito restritivo:
# 1. Ajuste RATE_LIMIT_MAX_REQUESTS
# 2. Ajuste RATE_LIMIT_WINDOW_MS