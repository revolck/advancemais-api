// üìÅ prisma/schema.prisma
// üóÑÔ∏è Schema configurado para MySQL com modelos do site

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// üìä Enums para padroniza√ß√£o de dados
enum Status {
  ATIVO
  INATIVO
}

enum TipoUsuario {
  PESSOA_FISICA    
  PESSOA_JURIDICA  
}

enum TipoAcao {
  LOGIN
  LOGOUT
  CRIACAO
  ATUALIZACAO
  EXCLUSAO
  ACESSO_NEGADO
  TENTATIVA_SUSPICAO
}

// üåê Enums para o Website
enum TipoServico {
  CONSULTORIA
  RECRUTAMENTO
}

// üë§ Modelo principal de usu√°rio
model Usuario {
  id        String @id @default(uuid())
  email     String @unique @db.VarChar(255)
  matricula String @unique @db.VarChar(10)
  
  senha        String  @db.VarChar(255)
  refreshToken String? @db.Text
  
  tipoUsuario TipoUsuario
  status      Status @default(ATIVO)
  
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  ultimoLogin  DateTime?
  
  nome     String? @db.VarChar(255)
  telefone String? @db.VarChar(20)
  
  perfil PerfilUsuario?
  logs   LogAuditoria[]
  
  @@map("usuarios")
  @@index([email, status])
  @@index([matricula])
}

model PerfilUsuario {
  id        String @id @default(uuid())
  usuarioId String @unique
  
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  
  cpf         String? @unique @db.VarChar(11)
  cnpj        String? @unique @db.VarChar(14)
  razaoSocial String? @db.VarChar(255)
  
  endereco String? @db.VarChar(500)
  cidade   String? @db.VarChar(100)
  estado   String? @db.VarChar(2)
  cep      String? @db.VarChar(8)
  
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  
  @@map("perfis_usuarios")
}

model LogAuditoria {
  id        String @id @default(uuid())
  usuarioId String?
  
  usuario Usuario? @relation(fields: [usuarioId], references: [id])
  
  acao      TipoAcao
  descricao String   @db.Text
  
  ipAddress String? @db.VarChar(45)
  userAgent String? @db.Text
  
  criadoEm DateTime @default(now())
  
  @@index([usuarioId, criadoEm])
  @@index([acao, criadoEm])
  @@map("logs_auditoria")
}

model RateLimit {
  id              String    @id @default(uuid())
  chave           String    @unique @db.VarChar(255)
  tentativas      Int       @default(0)
  ultimaTentativa DateTime  @default(now())
  bloqueadoAte    DateTime?
  
  @@index([ultimaTentativa])
  @@map("rate_limits")
}

//=========
// WEBSITE 
//=========

// P√°gina Inicial
model Sobre {
  id          Int      @id @default(autoincrement())
  imagemUrl   String   @db.VarChar(500)
  titulo      String   @db.VarChar(255)
  descricao   String   @db.Text
  criadoEm    DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  
  @@map("sobre")
}

model Banner {
  id         Int      @id @default(autoincrement())
  imagemUrl  String   @db.VarChar(500)
  linkUrl    String   @db.VarChar(500)
  position   Int      // Define a ordem de exibi√ß√£o
  criadoEm   DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  
  @@map("banners")
}

model Servico {
  id          Int         @id @default(autoincrement())
  tipo        TipoServico
  imagemUrl   String      @db.VarChar(500)
  titulo      String      @db.VarChar(255)
  descricao   String      @db.Text
  titleButton String      @db.VarChar(100)
  urlButton   String      @db.VarChar(500)
  criadoEm    DateTime    @default(now())
  atualizadoEm DateTime   @updatedAt
  
  @@map("servicos")
}

// P√°gina Sobre
model TituloPagina {
  id           Int      @id @default(autoincrement())
  titulo       String   @db.VarChar(255)
  subtitulo    String   @db.VarChar(255)
  descricao    String   @db.VarChar(250)
  textoBotao   String   @db.VarChar(100)
  urlBotao     String   @db.VarChar(500)
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  
  @@map("titulos_pagina")
}

model InformacaoAdvance {
  id        Int      @id @default(autoincrement())
  urlVideo  String   @db.VarChar(500)
  historia  String   @db.VarChar(500)
  missao    String   @db.VarChar(500)
  visao     String   @db.VarChar(500)
  criadoEm  DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  
  @@map("informacoes_advance")
}

model PorqueEscolherAdvance {
  id           Int           @id @default(autoincrement())
  titulo       String        @db.VarChar(255)
  descricao    String        @db.VarChar(250)
  textoBotao   String        @db.VarChar(100)
  urlBotao     String        @db.VarChar(500)
  boxes        BoxDestaque[] // Rela√ß√£o com os boxes
  criadoEm     DateTime      @default(now())
  atualizadoEm DateTime      @updatedAt
  
  @@map("porque_escolher_advance")
}

model BoxDestaque {
  id                        Int      @id @default(autoincrement())
  icone                     String   @db.VarChar(255)
  titulo                    String   @db.VarChar(255)
  descricao                 String   @db.Text
  porqueEscolherAdvanceId   Int
  porqueEscolherAdvance     PorqueEscolherAdvance @relation(fields: [porqueEscolherAdvanceId], references: [id], onDelete: Cascade)
  
  @@map("boxes_destaque")
}

model Empresa {
  id              Int      @id @default(autoincrement())
  imagemUrl       String   @db.VarChar(500)
  titulo          String   @db.VarChar(255)
  descricao       String   @db.VarChar(500)
  tituloImagem    String   @db.VarChar(255)
  descricaoImagem String   @db.Text
  textoBotao      String   @db.VarChar(100)
  urlBotao        String   @db.VarChar(500)
  criadoEm        DateTime @default(now())
  atualizadoEm    DateTime @updatedAt
  
  @@map("empresas")
}

// P√°gina Cursos
model TituloPaginaCursos {
  id         Int      @id @default(autoincrement())
  titulo     String   @db.VarChar(255)
  subtitulo  String   @db.VarChar(255)
  descricao  String   @db.Text
  textoBotao String   @db.VarChar(100)
  urlBotao   String   @db.VarChar(500)
  criadoEm   DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  
  @@map("titulos_pagina_cursos")
}

model MercadoTrabalho {
  id         Int                @id @default(autoincrement())
  titulo     String             @db.VarChar(255)
  subtitulo  String             @db.VarChar(255)
  destaques  DestaqueMercado[]  // Rela√ß√£o 1:N
  criadoEm   DateTime           @default(now())
  atualizadoEm DateTime         @updatedAt
  
  @@map("mercados_trabalho")
}

model DestaqueMercado {
  id                Int              @id @default(autoincrement())
  numeroDestaque    String           @db.VarChar(50)
  descricaoDestaque String           @db.Text
  mercadoTrabalhoId Int
  mercadoTrabalho   MercadoTrabalho @relation(fields: [mercadoTrabalhoId], references: [id], onDelete: Cascade)
  
  @@map("destaques_mercado")
}