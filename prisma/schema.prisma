generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Usuario {
  id            String      @id @default(uuid())
  nomeCompleto  String
  supabaseId    String      @unique
  cpf           String?     @unique
  cnpj          String?     @unique
  dataNasc      DateTime?
  telefone      String
  genero        String?
  email         String      @unique
  senha         String
  matricula     String?
  codEmpresa    String?
  tipoUsuario   TipoUsuario
  role          Role
  status        Status      @default(ATIVO)
  aceitarTermos Boolean     @default(false)
  criadoEm      DateTime    @default(now())
  atualizadoEm  DateTime    @updatedAt
  ultimoLogin   DateTime?
  refreshToken  String?
  
  // CAMPOS PARA RECUPERAÇÃO DE SENHA
  tokenRecuperacao           String?   
  tokenRecuperacaoExp        DateTime? 
  tentativasRecuperacao      Int       @default(0)
  ultimaTentativaRecuperacao DateTime?
  
  // CAMPOS PARA VERIFICAÇÃO DE EMAIL (NOVOS)
  emailVerificado              Boolean   @default(false)
  emailVerificadoEm            DateTime?
  emailVerificationToken       String?   @unique
  emailVerificationTokenExp    DateTime?
  emailVerificationAttempts    Int       @default(0)
  ultimaTentativaVerificacao   DateTime?

  // RELACIONAMENTOS EXISTENTES
  enderecos     Endereco[]
  empresa       Empresa?    @relation(fields: [codEmpresa], references: [id])
  codigoUsuario CodigoUsuario?



  @@index([tokenRecuperacao])
  @@index([emailVerificationToken])
  @@index([status])
  @@index([role])
  @@index([tipoUsuario])
  @@index([criadoEm])
}

model Empresa {
  id        String    @id @default(uuid())
  nome      String
  logoUrl   String?
  cidade    String?
  estado    String?
  criadoEm  DateTime  @default(now())
  usuarios  Usuario[]
  
}

model Endereco {
  id           String   @id @default(uuid())
  usuarioId    String
  logradouro   String
  numero       String
  bairro       String
  cidade       String
  estado       String
  cep          String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
}

model LogEmail {
  id          String      @id @default(uuid())
  usuarioId   String?
  email       String
  tipoEmail   TipoEmail
  status      StatusEmail
  tentativas  Int         @default(1)
  erro        String?
  messageId   String?
  criadoEm    DateTime    @default(now())
  atualizadoEm DateTime   @updatedAt

  @@index([usuarioId])
  @@index([email])
  @@index([tipoEmail])
  @@index([criadoEm])
}

model LogSMS {
  id          String    @id @default(uuid())
  usuarioId   String?
  telefone    String
  tipoSMS     TipoSMS
  status      StatusSMS
  tentativas  Int       @default(1)
  erro        String?
  messageId   String?
  criadoEm    DateTime  @default(now())
  atualizadoEm DateTime @updatedAt

  @@index([usuarioId])
  @@index([telefone])
  @@index([tipoSMS])
  @@index([criadoEm])
}

model CodigoUsuario {
  codigo    Int        @id @default(autoincrement())
  usuarioId String     @unique
  tipo      CodigoTipo @default(USUARIO)
  criadoEm  DateTime   @default(now())

  usuario   Usuario    @relation(fields: [usuarioId], references: [id])

  @@map("codigo_usuario")
}

model WebsiteSobre {
  id           String   @id @default(uuid())
  imagemUrl    String
  imagemTitulo String
  titulo       String
  descricao    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteConsultoria {
  id           String   @id @default(uuid())
  imagemUrl    String
  imagemTitulo String
  titulo       String
  descricao    String
  buttonUrl    String
  buttonLabel  String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteRecrutamento {
  id           String   @id @default(uuid())
  imagemUrl    String
  imagemTitulo String
  titulo       String
  descricao    String
  buttonUrl    String
  buttonLabel  String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteSobreEmpresa {
  id               String   @id @default(uuid())
  titulo           String
  descricao        String
  descricaoVisao   String
  descricaoMissao  String
  descricaoValores String
  videoUrl         String
  criadoEm         DateTime @default(now())
  atualizadoEm     DateTime @updatedAt
}

model WebsiteTeam {
  id        String   @id @default(uuid())
  photoUrl  String
  nome      String
  cargo     String
  criadoEm  DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  ordem     WebsiteTeamOrdem?
}

model WebsiteTeamOrdem {
  id            String       @id @default(uuid())
  websiteTeamId String       @unique
  ordem         Int
  status        WebsiteStatus @default(RASCUNHO)
  criadoEm      DateTime     @default(now())

  team          WebsiteTeam  @relation(fields: [websiteTeamId], references: [id], onDelete: Cascade)

  @@unique([ordem])
  @@index([ordem])
  @@index([status])
}

model WebsiteDepoimento {
  id          String   @id @default(uuid())
  depoimento  String
  nome        String
  cargo       String
  fotoUrl     String
  criadoEm    DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  ordem       WebsiteDepoimentoOrdem?
}

model WebsiteDepoimentoOrdem {
  id                   String       @id @default(uuid())
  websiteDepoimentoId  String       @unique
  ordem                Int
  status               WebsiteStatus @default(RASCUNHO)
  criadoEm             DateTime     @default(now())

  depoimento           WebsiteDepoimento @relation(fields: [websiteDepoimentoId], references: [id], onDelete: Cascade)

  @@unique([ordem])
  @@index([ordem])
}

model WebsiteDiferenciais {
  id           String   @id @default(uuid())
  icone1       String
  titulo1      String
  descricao1   String
  icone2       String
  titulo2      String
  descricao2   String
  icone3       String
  titulo3      String
  descricao3   String
  icone4       String
  titulo4      String
  descricao4   String
  titulo       String
  descricao    String
  botaoUrl     String
  botaoLabel   String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteSlider {
  id          String   @id @default(uuid())
  sliderName  String
  imagemUrl   String
  link        String?
  criadoEm    DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  ordem       WebsiteSliderOrdem?
}

model WebsiteSliderOrdem {
  id              String             @id @default(uuid())
  websiteSliderId String             @unique
  ordem           Int
  orientacao      SliderOrientation
  status          WebsiteStatus      @default(RASCUNHO)
  criadoEm        DateTime           @default(now())

  slider          WebsiteSlider      @relation(fields: [websiteSliderId], references: [id], onDelete: Cascade)

  @@unique([ordem, orientacao])
  @@index([ordem])
}

model WebsiteBanner {
  id           String   @id @default(uuid())
  imagemUrl    String
  imagemTitulo String
  link         String?
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  ordem        WebsiteBannerOrdem?
}

model WebsiteBannerOrdem {
  id              String       @id @default(uuid())
  websiteBannerId String       @unique
  ordem           Int
  status          WebsiteStatus @default(RASCUNHO)
  criadoEm        DateTime     @default(now())

  banner          WebsiteBanner @relation(fields: [websiteBannerId], references: [id], onDelete: Cascade)

  @@unique([ordem])
  @@index([ordem])
  @@index([status])
}

model WebsiteLogoEnterprise {
  id         String   @id @default(uuid())
  nome       String
  imagemUrl  String
  imagemAlt  String
  website    String?
  criadoEm   DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  ordem      WebsiteLogoEnterpriseOrdem?
}

model WebsiteLogoEnterpriseOrdem {
  id                     String       @id @default(uuid())
  websiteLogoEnterpriseId String       @unique
  ordem                  Int
  status                 WebsiteStatus @default(RASCUNHO)
  criadoEm               DateTime     @default(now())

  logo WebsiteLogoEnterprise @relation(fields: [websiteLogoEnterpriseId], references: [id], onDelete: Cascade)

  @@unique([ordem])
  @@index([ordem])
  @@index([status])
}

model WebsiteImagemLogin {
  id           String   @id @default(uuid())
  imagemUrl    String
  imagemTitulo String
  link         String?
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsitePlaninhas {
  id        String @id @default(uuid())
  titulo    String
  descricao String
  icone1    String
  titulo1   String
  descricao1 String
  icone2    String
  titulo2   String
  descricao2 String
  icone3    String
  titulo3   String
  descricao3 String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteAdvanceAjuda {
  id         String @id @default(uuid())
  titulo     String
  descricao  String
  imagemUrl  String
  imagemTitulo String
  titulo1    String
  descricao1 String
  titulo2    String
  descricao2 String
  titulo3    String
  descricao3 String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteRecrutamentoSelecao {
  id         String @id @default(uuid())
  titulo     String
  descricao  String
  imagemUrl  String
  imagemTitulo String
  titulo1    String
  titulo2    String
  titulo3    String
  titulo4    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteSistema {
  id             String @id @default(uuid())
  titulo         String
  descricao      String
  subtitulo      String
  etapa1Titulo   String
  etapa1Descricao String
  etapa2Titulo   String
  etapa2Descricao String
  etapa3Titulo   String
  etapa3Descricao String
  criadoEm       DateTime @default(now())
  atualizadoEm   DateTime @updatedAt
}

model WebsiteTreinamentoCompany {
  id           String   @id @default(uuid())
  titulo       String
  descricao    String
  imagemUrl    String
  imagemTitulo String
  titulo1      String
  titulo2      String
  titulo3      String
  titulo4      String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteConexaoForte {
  id           String @id @default(uuid())
  titulo       String
  descricao    String
  imagemUrl1   String
  imagemTitulo1 String
  imagemUrl2   String
  imagemTitulo2 String
  imagemUrl3   String
  imagemTitulo3 String
  imagemUrl4   String
  imagemTitulo4 String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteTreinamentosInCompany {
  id         String   @id @default(uuid())
  titulo     String
  icone1     String
  descricao1 String
  icone2     String
  descricao2 String
  icone3     String
  descricao3 String
  icone4     String
  descricao4 String
  icone5     String
  descricao5 String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model WebsiteInformacoes {
  id           String   @id @default(uuid())
  endereco     String?
  cep          String?
  cidade       String?
  estado       String?
  telefone1    String?
  telefone2    String?
  whatsapp     String?
  linkedin     String?
  facebook     String?
  instagram    String?
  youtube      String?
  email        String?
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  horarios WebsiteHorarioFuncionamento[]
}

model WebsiteHorarioFuncionamento {
  id            String   @id @default(uuid())
  diaDaSemana   String
  horarioInicio String
  horarioFim    String
  informacoes   WebsiteInformacoes @relation(fields: [informacoesId], references: [id], onDelete: Cascade)
  informacoesId String
  criadoEm      DateTime @default(now())
  atualizadoEm  DateTime @updatedAt
}

model WebsiteHeaderPage {
  id          String               @id @default(uuid())
  subtitulo   String
  titulo      String
  descricao   String
  imagemUrl   String
  buttonLabel String
  buttonLink  String
  page        WebsiteHeaderPageType @unique
  criadoEm    DateTime              @default(now())
  atualizadoEm DateTime             @updatedAt
}

// =============================================
// ENUMS EXISTENTES
// =============================================

enum TipoUsuario {
  PESSOA_FISICA
  PESSOA_JURIDICA
}

enum Role {
  ADMIN
  MODERADOR
  FINANCEIRO
  PROFESSOR
  EMPRESA
  PEDAGOGICO
  RECRUTADOR
  PSICOLOGO
  ALUNO_CANDIDATO
}

enum Status {
  ATIVO
  INATIVO
  BANIDO
  PENDENTE
  SUSPENSO
}

enum TipoEmail {
  BOAS_VINDAS
  RECUPERACAO_SENHA
  VERIFICACAO_EMAIL
  NOTIFICACAO_SISTEMA
}

enum StatusEmail {
  ENVIADO
  FALHA
  PENDENTE
}

enum TipoSMS {
  VERIFICACAO
  NOTIFICACAO
  MARKETING
}

enum StatusSMS {
  ENVIADO
  FALHA
  PENDENTE
}

enum CodigoTipo {
  USUARIO
  EMPRESA
}

// Métodos de pagamento aceitos para planos


enum SliderOrientation {
  DESKTOP
  TABLET_MOBILE
}

enum WebsiteStatus {
  PUBLICADO
  RASCUNHO
}

enum WebsiteHeaderPageType {
  SOBRE
  RECRUTAMENTO
  VAGAS
  TREINAMENTO
  CONTATO
  BLOG
  CURSOS
  POLITICA_PRIVACIDADE
  OUVIDORIA
}

